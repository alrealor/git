# Git

Concepts
--------------------
HEAD -> More recent commit on a branch


Commands:
--------------------
- Initialize a git local repository
	$ git init
    
- Make a copy from remote repository to local repository
    $ git clone <REPOSITORY_URL>    

- Get the status from files and directories of the local git repository
	$ git status
	
- Add files/directories to the STAGING area
	$ git add
	
- Commit changes into your local repository
	$ git commit -m "commit_message"
	
- Upload to update changes from local repository to the remote repository
	$ git push origin master
	
- Download and update changes from remote repository to local repository
	$ git pull
		
- Display the commit history
	$ git log

- Revert changes (use -n option to dont auto-commit)
	$ git revert <commit_first_7_characters> 

- Reset changes to a previous commit point from history
	$ git reset <commit_first_7_characters>

    
* BRANCHES
--------------------    
- List all branches 
	$ git branch -a
    
- List all remote branches 
	$ git branch -r
    
- Create New branch
	$ git branch <branch_name>
    
- Create and moving to new branch
    $ git checkout -b <BRANCH_NAME>

- Move between branches
	$ git checkout <branch_name>

    
* MERGE
--------------------  

- In target branch, we merge the new branch, after a merge with conflict we need to resolve conflict and do the commit to complete the merge
    $ git merge

- Differences between files
    $ git diff

    
    
- Add a remote repository like GitHub or Bitbucket:
    $ git remote add origin <REPOSITORY_URL>
	

- Make a copy from remote respository to other remote repository
    $ git fork


* GIT IGNORE FILE (.gitignore)
-----------------------------
- This file will ignore for versionning files/directories especified


* STASH
--------------------
Git stash saves your changes temporarly to apply other changes and the return back yours.

- When you try to do a merge from repository to local and the same file has changes on both sides, you can STASH SAVE those changes, 
  then pull correctly from repository and then apply STASH POP to get your local changes available again
    $ git stash save
    
- Retrieve your stashed changes to be re-applied
    $ git stash pop





